{
  "apiVersion": "63.0",
  "excludeIdsFromCSVFiles": "true",
  "objectSets": [
    {
      "objects": [
        {
          "query": "SELECT ConversionFactor, CurrencyIsoCode, Description, Name, RoundingMethod, Scale, Sequence, Status, Type, UnitCode, UnitOfMeasureClassId FROM UnitOfMeasure ORDER BY UnitCode ASC",
          "operation": "Upsert",
          "externalId": "UnitCode",
          "excluded": false
        },
        {
          "query": "SELECT Code, BaseUnitOfMeasureId, DefaultUnitOfMeasureId, Description, Name, Status, Type FROM UnitOfMeasureClass ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT ConversionRate, DecimalPlaces, IsActive, IsCorporate, IsoCode FROM CurrencyType ORDER BY IsoCode ASC",
          "operation": "Insert",
          "externalId": "IsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Name, CatalogType, Code, Description FROM ProductCatalog ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT ArePartialPeriodsAllowed, Name, ProrationPolicyType, RemainderStrategy FROM ProrationPolicy",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT Name, CatalogId, Code, Description, ParentCategoryId, SortOrder FROM ProductCategory ORDER BY Catalog.Code ASC, ParentCategory.Name ASC, Name ASC",
          "operation": "Upsert",
          "externalId": "Name;Catalog.Code;ParentCategory.Name",
          "excluded": false
        },
        {
          "query": "SELECT Name, Status, PricingTerm, PricingTermUnit, SellingModelType FROM ProductSellingModel ORDER BY Name ASC, SellingModelType ASC",
          "operation": "Upsert",
          "externalId": "Name;SellingModelType",
          "excluded": false
        },
        {
          "query": "SELECT Name, Code FROM AttributeCategory ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT CurrencyIsoCode, DataType, Code, Description, Name, Status FROM AttributePicklist ORDER BY Name ASC",
          "operation": "Upsert",
          "externalId": "Name"
        },
        {
          "query": "SELECT Name, Code, IsDefault, DisplayValue, PicklistId, Sequence, Value, Abbreviation, Status  FROM AttributePicklistValue ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Code"
        },
        {
          "query": "SELECT Code, CurrencyIsoCode, DataType, DefaultHelpText, DefaultValue, Description, DeveloperName, IsActive, IsRequired, Label, Name, PicklistId, SourceSystemIdentifier, UnitOfMeasureId, ValueDescription FROM AttributeDefinition ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId FROM AttributeCategoryAttribute ORDER BY AttributeCategory.Name ASC, AttributeDefinition.Code ASC",
          "operation": "Upsert",
          "externalId": "AttributeCategory.Name;AttributeDefinition.Code",
          "excluded": false
        },
        {
          "query": "SELECT Name, Code, Status FROM ProductClassification ORDER BY Code ASC",
          "operation": "Upsert",
          "externalId": "Code",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId, AttributeNameOverride, CurrencyIsoCode, DefaultValue, Description, DisplayType, HelpText, IsHidden, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Name, ProductClassificationId, Sequence, Status, StepValue, UnitOfMeasureId, ValueDescription FROM ProductClassificationAttr ORDER BY ProductClassification.Code ASC, AttributeDefinition.Code ASC, AttributeCategory.Code ASC, Name ASC",
          "operation": "Upsert",
          "externalId": "ProductClassification.Code;AttributeDefinition.Code;AttributeCategory.Code",
          "excluded": false
        },
        {
          "query": "SELECT BasedOnId, ConfigureDuringSale, CurrencyIsoCode, DisplayUrl, IsActive, IsAssetizable, ProductCode, Description, Family, Name, StockKeepingUnit, Type, QuantityUnitOfMeasure, CanRamp, IsSoldOnlyWithOtherProds, SpecificationType, UnitOfMeasureId FROM Product2 ORDER BY StockKeepingUnit ASC",
          "operation": "Upsert",
          "externalId": "StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT ProductCategoryId, ProductId, CatalogId, CurrencyIsoCode FROM ProductCategoryProduct ORDER BY Product.StockKeepingUnit ASC, Catalog.Code ASC, ProductCategory.Name ASC",
          "operation": "Upsert",
          "externalId": "ProductCategory.Name;Product.StockKeepingUnit;Catalog.Code",
          "excluded": false
        },
        {
          "query": "SELECT IsDefault, Product2Id, ProductSellingModelId, ProrationPolicyId FROM ProductSellingModelOption ORDER BY Product2.StockKeepingUnit ASC, ProductSellingModel.Name ASC",
          "operation": "Upsert",
          "externalId": "Product2.StockKeepingUnit;ProductSellingModel.Name"
        },
        {
          "query": "SELECT Name, Code, ParentProductId, Sequence, MinBundleComponents, MaxBundleComponents, Description, CurrencyIsoCode FROM ProductComponentGroup ORDER BY ParentProduct.StockKeepingUnit ASC, Code ASC",
          "operation": "Upsert",
          "externalId": "Code;ParentProduct.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT AssociatedProductRoleCat, MainProductRoleCat, Name FROM ProductRelationshipType ORDER BY Name ASC",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT Name, ChildProductClassificationId, ChildProductId, ChildProductRole, ChildSellingModelId, DoesBundlePriceIncludeChild, IsComponentRequired, IsDefaultComponent, IsQuantityEditable, MaxQuantity, MinQuantity, ParentProductId, ParentProductRole, ParentSellingModelId, ProductComponentGroupId, ProductRelationshipTypeId, Quantity, QuantityScaleMethod, Sequence, UnitOfMeasureId FROM ProductRelatedComponent ORDER BY Name ASC, ChildProductClassification.Code ASC, ChildProduct.StockKeepingUnit ASC, ParentProduct.StockKeepingUnit ASC, ProductComponentGroup.Code ASC, ProductRelationshipType.Name ASC",
          "operation": "Upsert",
          "externalId": "ChildProductClassification.Code;ChildProduct.StockKeepingUnit;ParentProduct.StockKeepingUnit;ProductComponentGroup.Code;ProductRelationshipType.Name",
          "excluded": false
        },
        {
          "query": "SELECT IsQuantityEditable, CurrencyIsoCode, IsExcluded, IsDefaultComponent, MaxQuantity, MinQuantity, Name, OverrideContextId$Product2, DoesBundlePriceIncludeChild, ProductRelatedComponentId, Quantity, QuantityScaleMethod, IsComponentRequired, UnitOfMeasureId FROM ProductRelComponentOverride",
          "operation": "Upsert",
          "externalId": "ProductRelatedComponent.Name;OverrideContext.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT AttributeCategoryId, AttributeDefinitionId, AttributeNameOverride, CurrencyIsoCode, DefaultValue, Description, DisplayType, HelpText, IsHidden, IsPriceImpacting, IsReadOnly, IsRequired, MaximumCharacterCount, MaximumValue, MinimumCharacterCount, MinimumValue, Name, OverriddenProductAttributeDefinitionId, ProductClassificationAttributeId, Product2Id, Sequence, Status, StepValue, UnitOfMeasureId, ValueDescription FROM ProductAttributeDefinition ORDER BY Product2.StockKeepingUnit ASC, AttributeCategory.Name ASC, AttributeDefinition.Code ASC, ProductClassificationAttribute.Name ASC",
          "operation": "Upsert",
          "externalId": "AttributeCategory.Code;AttributeDefinition.Code;Product2.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsActive, IsStandard, CostBookId, ValidFrom, ValidTo, Description FROM Pricebook2",
          "operation": "Upsert",
          "externalId": "Name;IsStandard",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsDefault, EffectiveFrom, EffectiveTo FROM CostBook",
          "operation": "Upsert",
          "externalId": "Name;IsDefault",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, CurrencyIsoCode, EffectiveFrom, EffectiveTo, LowerBound, PriceAdjustmentScheduleId, PricingTerm, PricingTermUnit, Product2Id, ProductSellingModelId, ScheduleType, SellingModelType, TierType, TierValue, UpperBound FROM PriceAdjustmentTier ORDER BY PriceAdjustmentSchedule.Name ASC, Product2.StockKeepingUnit ASC, ProductSellingModel.Name ASC, TierType ASC",
          "operation": "Upsert",
          "externalId": "PriceAdjustmentSchedule.Name;Product2.StockKeepingUnit;ProductSellingModel.Name,TierType,TierValue,UpperBound,LowerBound,CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentMethod, CurrencyIsoCode, Description, EffectiveFrom, EffectiveTo, IsActive, Name, Pricebook2Id, ScheduleType FROM PriceAdjustmentSchedule WHERE ContractId = NULL ORDER BY Name ASC, CurrencyIsoCode ASC, Pricebook2.Name ASC",
          "operation": "Readonly",
          "externalId": "Name;CurrencyIsoCode;Pricebook2.Name",
          "excluded": false
        },
        {
          "query": "SELECT Name FROM AttributeBasedAdjRule ORDER BY Name ASC",
          "operation": "Upsert",
          "externalId": "Name",
          "excluded": false
        },
        {
          "query": "SELECT AttributeBasedAdjRuleId, AttributeDefinitionId, BooleanValue, DateValue, DateTimeValue, DoubleValue, IntegerValue, Operator, ProductId, StringValue FROM AttributeAdjustmentCondition",
          "operation": "Upsert",
          "externalId": "AttributeBasedAdjRule.Name;AttributeDefinition.Code;Product.StockKeepingUnit",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, AdjustmentValue, AttributeAdjConditionsHash, AttributeBasedAdjRuleId, AttributeCount, CurrencyIsoCode, EffectiveFrom, EffectiveTo, PriceAdjustmentScheduleId, PricingTerm, PricingTermUnit, ProductId, ProductSellingModelId, ScheduleType, SellingModelType FROM AttributeBasedAdjustment",
          "operation": "Upsert",
          "externalId": "AttributeBasedAdjRule.Name;PriceAdjustmentSchedule.Name;Product.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT AdjustmentType, AdjustmentValue, EffectiveFrom, EffectiveTo, Name, PriceAdjustmentScheduleId, ProductId, ParentProductId, RootBundleId, ProductSellingModelId, ParentProductSellingModelId, PricingTerm, PricingTermUnit, RootProductSellingModelId, ScheduleType, SellingModelType, CurrencyIsoCode FROM BundleBasedAdjustment",
          "operation": "Upsert",
          "externalId": "PriceAdjustmentSchedule.Name;Product.StockKeepingUnit;ParentProduct.StockKeepingUnit;RootBundle.StockKeepingUnit;ProductSellingModel.Name;ParentProductSellingModel.Name;RootProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Name, IsActive, IsDerived, Pricebook2Id, Product2Id, ProductSellingModelId, UnitPrice, CurrencyIsoCode FROM PricebookEntry ORDER BY Pricebook2.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
          "operation": "Upsert",
          "externalId": "Name;Pricebook2.Name;Product2.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT PricebookId, PricebookEntryId, ProductId, ContributingProductId, ProductSellingModelId, DerivedPricingScope, Formula, EffectiveFrom, EffectiveTo, PricingSource, CurrencyIsoCode FROM PricebookEntryDerivedPrice ORDER BY Pricebook.Name ASC, CurrencyIsoCode DESC, Name ASC, ProductSellingModel.Name ASC",
          "operation": "Upsert",
          "externalId": "Pricebook.Name;PricebookEntry.Name;Product.StockKeepingUnit;ContributingProduct.StockKeepingUnit;ProductSellingModel.Name;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT Cost, CostBookId, EffectiveFrom, EffectiveTo, ProductId, Description, CurrencyIsoCode FROM CostBookEntry ORDER BY CostBook.Name ASC, CurrencyIsoCode DESC, Name ASC",
          "operation": "Upsert",
          "externalId": "CostBook.Name;Product.StockKeepingUnit;CurrencyIsoCode",
          "excluded": false
        },
        {
          "query": "SELECT CurrencyIsoCode, DurationType, ProductId, ProductSellingModelId, SegmentType, TrialDuration FROM ProductRampSegment ORDER BY Product.StockKeepingUnit ASC, ProductSellingModel.SellingModelType ASC, SegmentType ASC",
          "operation": "Upsert",
          "externalId": "Product.StockKeepingUnit;ProductSellingModel.SellingModelType;SegmentType",
          "excluded": false
        },
        {
          "query": "SELECT Description, DeveloperName, Language, MasterLabel, RuleEngine, SaveType FROM TransactionProcessingType",
          "operation": "Insert",
          "externalId": "DeveloperName",
          "excluded": false
        }
      ]
    }
  ],
  "orgs": []
}